{"version":3,"sources":["webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.ts","webpack:///src/app/login/login.page.html"],"names":["routes","path","component","LoginPage","LoginPageRoutingModule","RouterModule","LoginPageModule","CommonModule","FormsModule","IonicModule","alertCtrl","dataService","router","loginDetails","username","password","getStorageData","authentication","console","log","forEach","value","navigate","showAlert","create","header","message","buttons","alert","present","onDidDismiss","result","login","signInPage"],"mappings":"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","file":"src_app_login_login_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Storage } from '@ionic/storage-angular';\nimport { DataService } from '../services/data.service';\nimport { AlertController } from '@ionic/angular';  \n \n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  username;\n  password;\n  loginInfo\n  \n\n  loginDetails = {username: \"Frazer\", password: \"Linscott\"}\n\n  storageLoginDetails;\n\n  constructor(public alertCtrl: AlertController, private dataService: DataService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  async login(){\n\n    let authentication =  await this.dataService.getStorageData(\"LoginStorage\")\n    console.log(authentication)\n    authentication.forEach((value) => {\n      if (this.username == value.username && this.password == value.password){\n        this.router.navigate(['main', value.username])\n      } else {\n        this.showAlert()\n        }\n    }); \n  }\n\n  async showAlert() {  \n    const alert = await this.alertCtrl.create({  \n      header: 'Incorrect Username or Password',  \n      message: 'Please Try Again',  \n      buttons: ['OK']  \n    });  \n    await alert.present();  \n    const result = await alert.onDidDismiss();  \n    console.log(result);  \n  }  \n \n\n  signInPage(){\n    this.router.navigate(['create-acc'])\n  }\n\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button color=\"red\" ></ion-back-button>\n    </ion-buttons>\n    <!-- <ion-title>\n      Login \n    </ion-title> -->\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content [fullscreen]=\"true\">\n\n  <ion-card class=\"ion-no-margin\">\n    <ion-img src=\"assets/imgs/loginHeaderLogin.png\"></ion-img>\n    <ion-card-header>\n      <ion-card-title>\n        Login\n      </ion-card-title>\n      <!-- <ion-card-subtitle>\n        Placeholder -instructions \n      </ion-card-subtitle> -->\n    </ion-card-header>\n    <ion-card-content>\n      <div class=\"sign-in-btns\">\n        <ion-item ><ion-icon name=\"person-circle-outline\"></ion-icon><ion-input [(ngModel)]=\"username\" placeholder=\"Username\"></ion-input></ion-item>\n        <ion-item class=\"pwdInput\"><ion-icon name=\"lock-closed-outline\"></ion-icon><ion-input [(ngModel)]=\"password\" placeholder=\"**********\"></ion-input></ion-item>\n        <ion-button fill=\"solid\" shape=\"round\" class=\"login\" (click)=\"login()\">Login</ion-button>\n        <!-- <ion-button fill=\"outline\" shape=\"round\" class=\"create\">Sign Up</ion-button> -->\n\n\n\n      </div>\n    </ion-card-content>\n  </ion-card>\n\n  <div>\n    <p class=\"signUp\">Dont have an account?<a slot=\"center\" class=\"signUpLink\" (click) = \"signInPage()\">SIGN UP</a></p></div>\n    <div>\n\n\n\n<!-- <div id=\"container\">\n  <ion-list class=\"background\">\n\n      <ion-button (click)=\"createLogin()\" shape=\"round\">Create</ion-button>\n\n      <ion-button (click)=\"login()\" shape=\"round\">Login</ion-button>\n\n</ion-list> -->"]}