{"version":3,"sources":["webpack:///src/app/main/main-routing.module.ts","webpack:///src/app/main/main.module.ts","webpack:///src/app/main/main.page.html","webpack:///src/app/main/main.page.ts"],"names":["routes","path","component","MainPage","MainPageRoutingModule","RouterModule","MainPageModule","CommonModule","FormsModule","IonicModule","dataService","activatedRoute","router","modalController","storage","USER_STORAGE_KEY","WorkoutOptions","WorkoutOneData","WorkoutTwoData","initDatabase","progressIndex","PHOTO_STORAGE_KEY","completeBtnShown","checklistsCount","loadData","LoadNumDays","loadInitData","photoStorageKey","snapshot","paramMap","get","photosDetailsObj","day","numDay","storageKey","photosDetailsStr","JSON","stringify","navigate","infoRecv","getStorageData","then","val","length","page","create","Workout1Page","componentProps","userStorage","updatedWorkoutList","modal","onDidDismiss","present","WorkoutDatabase","duration","initData","firstname","lastname","weight","durationINT","parseInt","startDate","endDate","console","log","e","location","isChecked","currentTarget","checked","readingCheck","waterCheck","eatingCheck","i","name","workoutOneSelected","selectedWorkoutOneNotes","notes","workoutTwoSelected","selectedWorkoutTwoNotes","pageInfo","progressData","Day","Workout1","NotesOne","Workout2","NotesTwo","Sleep","daySleep","Weight","dayWeight","Picture","Reading","Water","Eating","initWeight","Duration","addStorageDataNew","daysDiff","ReadingisChecked","EatingisChecked","DrinkingisChecked","CompletedPage","data","signOut","loadSelection","presentModal1","ImagePage","checkChecked","progressBtnClick"],"mappings":"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","file":"src_app_main_main_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MainPage } from './main.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MainPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MainPageRoutingModule } from './main-routing.module';\n\nimport { MainPage } from './main.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MainPageRoutingModule\n  ],\n  declarations: [MainPage]\n})\nexport class MainPageModule {}\n","\n\n<ion-header>\n  <ion-toolbar>\n    <ion-buttons class=\"signOut\" (click)=\"signOut()\" slot=\"start\"> Sign Out\n      <!-- <ion-back-button color=\"red\" > Sign Out </ion-back-button> -->\n    </ion-buttons>\n    <ion-buttons class=\"about\" [routerLink]=\"['/about']\" slot=\"end\"> About\n      <!-- <ion-back-button color=\"red\" > Sign Out </ion-back-button> -->\n    </ion-buttons>\n    <ion-title class=\"name\" >\n      {{firstname}}\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n\n\n<ion-content>\n\n  <div id=\"container\"> \n  <h1 >DAY {{numDay}} </h1>\n  </div>\n\n    <ion-list class=\"background\">\n      <ion-item>\n        <ion-label>Workout 1</ion-label>\n        <ion-select (click)=\"loadSelection()\" [(ngModel)] = \"workoutOneSelected\">\n          <ion-select-option *ngFor = \"let w of WorkoutOptions\" value={{w.name}}>{{w.name}}</ion-select-option>\n        </ion-select>\n        <a class=\"editLink\" (click)=\"presentModal1(1)\">Edit</a>\n    </ion-item>\n\n    <ion-item>\n        <ion-label>Workout 2</ion-label>\n        <ion-select (click)=\"loadSelection()\" [(ngModel)] = \"workoutTwoSelected\">\n          <ion-select-option *ngFor = \"let o of WorkoutOptions\" value= {{o.name}} >{{o.name}}</ion-select-option>\n                   <!-- if workout options are empty - alert to say add workouts  -->\n        </ion-select>\n        <a class=\"editLink\" (click)=\"presentModal1(2)\">Edit</a>\n    </ion-item>\n    <div><ion-item><ion-input type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\" ng-model=\"vm.onlyNumbers\" [(ngModel)] = \"daySleep\" placeholder=\"Sleep\"></ion-input></ion-item></div>\n    <div><ion-item><ion-input type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\" ng-model=\"vm.onlyNumbers\" [(ngModel)] = \"dayWeight\" class=\"weight\" placeholder=\"Weight\"></ion-input></ion-item></div>\n    <div> <ion-item (click)=\"ImagePage()\">Upload Progress Picture<ion-icon slot=\"end\" name=\"camera\"></ion-icon></ion-item> </div>\n  \n\n\n    <div> <ion-item><ion-checkbox [(ngModel)]=\"ReadingisChecked\" (click)=\"checkChecked($event, 'reading')\"></ion-checkbox>10 Pages of Reading</ion-item> </div>\n    <div> <ion-item><ion-checkbox [(ngModel)]=\"DrinkingisChecked\" (click)=\"checkChecked($event, 'water')\"></ion-checkbox>Drink 4L of Water</ion-item> </div>\n    <div> <ion-item><ion-checkbox [(ngModel)]=\"EatingisChecked\" (click)=\"checkChecked($event, 'food')\"></ion-checkbox>No Cheat Meals or Alcohol</ion-item> </div>\n\n  </ion-list>\n\n  <div id=\"bottomContainer\"> \n    <h2> DAYS REMAINING: </h2>\n  <h3> {{duration}}</h3> \n  <h2> FINISHING: {{ endDate | date: 'dd MMMM yyyy' }} </h2>\n  </div>\n\n</ion-content>\n\n<ion-footer>\n  <div class=\"buttonRow\">\n    <ion-row wrap>\n      <ion-col width-50>\n        <ion-button (click)=\"progressBtnClick()\" shape=\"round\" class=\"buttonRow\" expand=\"full\" >PROGRESS<ion-icon class=\"icon\" name=\"document-outline\"></ion-icon></ion-button>\n      </ion-col>\n      <ion-col width-50>\n        <ion-button *ngIf=\"completeBtnShown\" (click)=\"completeBtnClick()\"shape=\"round\" class=\"buttonRow\" expand=\"full\">COMPLETE<ion-icon class=\"icon\" name=\"checkbox-outline\"></ion-icon></ion-button>\n      </ion-col>\n    </ion-row>\n  </div>\n</ion-footer>","// how to reload the page data when the back to main page\n// when box is checked - pass 1 when not pass 0 \n// add day function {day+1:{page data}} {day+2:{page data}} \n// change progress button and finish day button\n// finish workshop wireframes to be assessed\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Workout1Page } from \"../workout1/workout1.page\";\nimport { CompletedPage } from \"../completed/completed.page\";\nimport { PhotoPage } from \"../photo/photo.page\";\nimport {ModalController } from \"@ionic/angular\";\nimport { Storage } from '@ionic/storage-angular';\nimport { DataService } from '../services/data.service';\n \n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.page.html',\n  styleUrls: ['./main.page.scss'],\n})\n\nexport class MainPage implements OnInit {\n  \n  duration;\n  firstname;\n  lastname;\n  weight;\n  USER_STORAGE_KEY= '';\n\n  WorkoutOptions=[];\n\n  WorkoutOneData=\"\";\n  WorkoutTwoData=\"\";\n\n  updatedWorkoutList;\n\n  workoutOneSelected;\n  workoutTwoSelected;\n\n  selectedWorkoutOneNotes;\n  selectedWorkoutTwoNotes;\n\n  daySleep;\n  dayWeight;\n  pageInfo\n  initDatabase=[];\n  WorkoutDatabase;\n\n  addDay;\n  readingCheck;\n  eatingCheck;\n  waterCheck; \n\n  ReadingisChecked;\n  EatingisChecked;\n  DrinkingisChecked\n  numDay;\n  durationINT;\n  photosDetailsStr;\n\n  progressIndex = 1;\n\n  PHOTO_STORAGE_KEY = '';\n\n  startDate;\n  endDate;\n\n  completeBtnShown = false\n\n  checklistsCount = 0; \n  \n\n  \n\nconstructor(private dataService: DataService, private activatedRoute: ActivatedRoute, private router: Router, private modalController:ModalController, private storage: Storage) { \n    this.loadData(); // load data from stoarge \n    this.LoadNumDays()  // load number of days left calculated from duration \n\n  }\n\n  ngOnInit() {\n    this.loadInitData()\n    // let infoRecv = this.activatedRoute.snapshot.paramMap.get(\"id\")\n    // this.USER_STORAGE_KEY=infoRecv\n    // console.log(this.USER_STORAGE_KEY)\n}\n\nasync ImagePage(){\n  let photoStorageKey = this.activatedRoute.snapshot.paramMap.get(\"id\")\n  let photosDetailsObj = {day: this.numDay, storageKey: photoStorageKey }\n  this.photosDetailsStr = JSON.stringify(photosDetailsObj)\n  // console.log(this.photosDetailsStr)\n  this.router.navigate(['photo', this.photosDetailsStr])\n  this.checklistsCount+=1 \n}\n\n// get init duration data and assignmnet numdays to display\n  async LoadNumDays(){\n    let infoRecv = this.activatedRoute.snapshot.paramMap.get(\"id\")\n    this.USER_STORAGE_KEY=infoRecv\n    await this.dataService.getStorageData(this.USER_STORAGE_KEY).then(val=> {\n      // console.log(val)\n      if (val[1].length === 0) {  //no PROGRESS DATA\n        this.numDay=1\n      } else {\n        this.numDay = (val[1].length+1)  //grab the last day of progress days and set to numDay\n        // console.log(this.numDay)\n      }\n    })\n  }\n\n\n//load data from storage \n  async loadData(){\n    // this.initDatabase = await this.dataService.getProgressData();\n    // this.WorkoutDatabase = await this.dataService.getWorkoutData();\n  }\n \n//remove item from stoarge \n  // async removeItem(index){\n  //   this.loadData();\n  //   // this.dataService.removeProgressItem(index);\n  //   this.initDatabase.splice(index, 1);\n  // }\n\n// present model when \"edit\" workout button is pressed \n  async presentModal1(page){\n    let infoRecv = this.activatedRoute.snapshot.paramMap.get(\"id\")\n    this.USER_STORAGE_KEY=infoRecv\n    const modal = await this.modalController.create({\n      component: Workout1Page, \n      componentProps: {userStorage: this.USER_STORAGE_KEY, updatedWorkoutList:this.WorkoutOptions, page}\n    });\n    modal.onDidDismiss();\n    return modal.present();\n  }\n\n// function to load selection list from storage \n  async loadSelection(){\n    this.WorkoutDatabase = await this.dataService.getStorageData(this.USER_STORAGE_KEY);\n    this.WorkoutOptions = this.WorkoutDatabase[2];\n    this.checklistsCount+=1 \n}\n\n\nasync loadInitData(){\n  let infoRecv = this.activatedRoute.snapshot.paramMap.get(\"id\")\n  this.USER_STORAGE_KEY=infoRecv\n  await this.dataService.getStorageData(this.USER_STORAGE_KEY).then(val=> {\n    this.duration=val[0][val[0].length - 1].initData.duration\n    this.firstname=val[0][val[0].length - 1].initData.firstname\n    this.lastname=val[0][val[0].length - 1].initData.lastname\n    this.weight=val[0][val[0].length - 1].initData.weight\n    this.durationINT = parseInt(this.duration);\n\n    this.startDate=val[0][val[0].length - 1].initData.startDate\n    this.endDate=val[0][val[0].length - 1].initData.endDate\n\n    // this.startDate = startDate.substring(0, 15);\n    // this.endDate = endDate.substring(0, 15);\n\n    console.log(this.startDate)\n    console.log(this.endDate)\n  });\n}\n\n\n// check if checkboxs are checked and assign varibles to add to storage \ncheckChecked(e, location): void {\n  var isChecked = e.currentTarget.checked;\n\n  if (isChecked == false ){\n    if (location === \"reading\"){\n      this.readingCheck = 10;\n    }\n    if (location === \"water\"){\n      this.waterCheck = 4;\n    }\n    if (location === \"food\"){\n      this.eatingCheck = true;\n      this.completeBtnShown=true\n  }\n}\n}\n\nasync progressBtnClick(){\n  this.router.navigate(['progress', this.USER_STORAGE_KEY])\n\n}\n\n//fucntion to add main page data to storage and navigate to progress page  \n  async completeBtnClick(){\n    this.completeBtnShown=false\n\n    await this.dataService.getStorageData(this.USER_STORAGE_KEY).then(val=> {\n\n      for (let i=0; i<val[2].length; i++){\n        if (val[2][i].name === this.workoutOneSelected){\n          this.selectedWorkoutOneNotes=val[2][i].notes\n        }\n        if (val[2][i].name === this.workoutTwoSelected){\n          this.selectedWorkoutTwoNotes=val[2][i].notes\n        }\n      }\n    });\n\n\n\n\n//get all new inputs and assign to varibles \n    this.pageInfo = {\n      progressData: {Day: this.numDay,\n        firstname :this.firstname,\n        lastname :this.lastname,\n        Workout1 : this.workoutOneSelected,\n        NotesOne : this.selectedWorkoutOneNotes,\n        Workout2 : this.workoutTwoSelected,\n        NotesTwo : this.selectedWorkoutTwoNotes,\n        Sleep : this.daySleep,\n        Weight : this.dayWeight,\n        Picture : 1, \n        Reading : this.readingCheck, \n        Water : this.waterCheck,\n        Eating : this.eatingCheck,\n        initWeight : this.weight,\n        Duration : this.duration\n        }\n    }\n \n\n//add new inputs to storage  \n    await this.dataService.addStorageDataNew(this.USER_STORAGE_KEY, 1, this.pageInfo) \n\n//calculate new \"days left\" to display on interface \n    await this.dataService.getStorageData(this.USER_STORAGE_KEY).then(val=> {\n      if (val[1].length === 0) {\n        let daysDiff = 0;\n        this.duration = this.durationINT-daysDiff \n      } else {\n        let daysDiff = val[1].length\n        this.duration = this.durationINT-daysDiff\n      }\n    })\n\n    await this.dataService.getStorageData(this.USER_STORAGE_KEY).then(val=> {\n        this.numDay = ((val[1][val[1].length - 1].progressData.Day)+=1)\n    });\n\n//reset inputs to allow user to input a new day \n    this.workoutOneSelected=\"\";\n    this.workoutTwoSelected=\"\";\n    this.daySleep=\"\";\n    this.dayWeight=\"\";\n    this.readingCheck=0;\n    this.waterCheck=0;\n    this.eatingCheck = false;\n\n\n    this.ReadingisChecked = false; \n    this.EatingisChecked = false; \n    this.DrinkingisChecked = false; \n\n    this.loadData()\n\n    const modal = await this.modalController.create({\n      component: CompletedPage, \n      componentProps: {userStorage: this.USER_STORAGE_KEY, data: this.pageInfo}\n    });\n    modal.onDidDismiss();\n    return modal.present();\n\n  }\n\n  signOut(){\n    this.USER_STORAGE_KEY='';\n    this.router.navigate(['pre-login'])\n  }\n}\n"]}